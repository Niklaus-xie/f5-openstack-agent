diff --git a/test/functional/config/basic_agent_config.json b/test/functional/config/basic_agent_config.json
index ac11613..3c6dc46 100644
--- a/test/functional/config/basic_agent_config.json
+++ b/test/functional/config/basic_agent_config.json
@@ -52,7 +52,7 @@
         "f5_external_physical_mappings": [
             "default:1.1:true"
         ], 
-        "f5_global_routed_mode": false, 
+        "f5_global_routed_mode": true,
         "f5_ha_type": "standalone", 
         "f5_parent_ssl_profile": "clientssl", 
         "f5_populate_static_arp": false, 
@@ -69,7 +69,9 @@
         "icontrol_hostname": "DEVICE_IP",
         "icontrol_password": "admin", 
         "icontrol_username": "admin", 
-        "icontrol_vcmp_hostname": null, 
+	"report_esd_names_in_agent": false,
+	"unlegacy_setting_placeholder": null,
+        "icontrol_vcmp_hostname": null,
         "instance_format": "[instance: %(uuid)s] ", 
         "instance_uuid_format": "[instance: %(uuid)s] ", 
         "interface_port_static_mappings": null, 
diff --git a/test/functional/config/overcloud_basic_agent_config.json b/test/functional/config/overcloud_basic_agent_config.json
index 86cd6c1..12fb8ef 100644
--- a/test/functional/config/overcloud_basic_agent_config.json
+++ b/test/functional/config/overcloud_basic_agent_config.json
@@ -52,7 +52,7 @@
         "f5_external_physical_mappings": [
             "default:1.1:true"
         ], 
-        "f5_global_routed_mode": true,
+        "f5_global_routed_mode": false,
         "f5_ha_type": "standalone", 
         "f5_parent_ssl_profile": "clientssl", 
         "f5_populate_static_arp": false, 
@@ -69,6 +69,8 @@
         "icontrol_hostname": "DEVICE_IP",
         "icontrol_password": "admin", 
         "icontrol_username": "admin", 
+	"report_esd_names_in_agent": false,
+	"unlegacy_setting_placeholder": null,
         "icontrol_vcmp_hostname": null, 
         "instance_format": "[instance: %(uuid)s] ", 
         "instance_uuid_format": "[instance: %(uuid)s] ", 
diff --git a/test/functional/neutronless/conftest.py b/test/functional/neutronless/conftest.py
index a3b761e..ecf0e5c 100644
--- a/test/functional/neutronless/conftest.py
+++ b/test/functional/neutronless/conftest.py
@@ -125,6 +125,8 @@ class TestConfig(object):
         config['icontrol_hostname'] = pytest.symbols.bigip_floating_ips[0]
         config['icontrol_username'] = pytest.symbols.bigip_username
         config['icontrol_password'] = pytest.symbols.bigip_password
+        config['report_esd_names_in_agent'] = False
+	config['unlegacy_setting_placeholder'] = None
         ENV_PREFIX = config['environment_prefix']
         FOLDER = '{0}_{1}'.format(ENV_PREFIX, self.TENANT_ID)
         return ENV_PREFIX, FOLDER, config
@@ -458,6 +460,8 @@ def icd_config():
     config['icontrol_hostname'] = pytest.symbols.bigip_floating_ips[0]
     config['icontrol_username'] = pytest.symbols.bigip_username
     config['icontrol_password'] = pytest.symbols.bigip_password
+    config['report_esd_names_in_agent'] = False
+    config['unlegacy_setting_placeholder'] = None
     try:
         config['f5_vtep_selfip_name'] = pytest.symbols.f5_vtep_selfip_name
     except AttributeError:
diff --git a/test/functional/neutronless/disconnected_service/conf_symbols.json b/test/functional/neutronless/disconnected_service/conf_symbols.json
index bac3529..7b565bf 100644
--- a/test/functional/neutronless/disconnected_service/conf_symbols.json
+++ b/test/functional/neutronless/disconnected_service/conf_symbols.json
@@ -9,6 +9,8 @@
   "icontrol_hostname":                            "DEVICE_IP",
   "icontrol_username":                            "admin",
   "icontrol_password":                            "admin",
+  "report_esd_names_in_agent":                    false,
+  "unlegacy_setting_placeholder":                 null,
   "f5_device_type":                               "external",
   "f5_ha_type":                                   "standalone",
   "f5_global_routed_mode":                        false,
diff --git a/test/functional/neutronless/disconnected_service/oslo_confs.json b/test/functional/neutronless/disconnected_service/oslo_confs.json
index 9964c80..bbde13f 100644
--- a/test/functional/neutronless/disconnected_service/oslo_confs.json
+++ b/test/functional/neutronless/disconnected_service/oslo_confs.json
@@ -445,6 +445,8 @@
         "icontrol_hostname": "DEVICE_IP",
         "icontrol_password": "admin", 
         "icontrol_username": "admin", 
+	"report_esd_names_in_agent": false,
+	"unlegacy_setting_placeholder": null,
         "icontrol_vcmp_hostname": null, 
         "instance_format": "[instance: %(uuid)s] ", 
         "instance_uuid_format": "[instance: %(uuid)s] ", 
diff --git a/test/functional/neutronless/esd/test_esd_pools.py b/test/functional/neutronless/esd/test_esd_pools.py
index 5ebc481..bc0779e 100644
--- a/test/functional/neutronless/esd/test_esd_pools.py
+++ b/test/functional/neutronless/esd/test_esd_pools.py
@@ -84,6 +84,8 @@ def icd_config():
     config['icontrol_hostname'] = pytest.symbols.bigip_floating_ips[0]
     config['icontrol_username'] = pytest.symbols.bigip_username
     config['icontrol_password'] = pytest.symbols.bigip_password
+    config['report_esd_names_in_agent'] = False
+    config['unlegacy_setting_placeholder'] = None
 
     return config
 
diff --git a/test/functional/neutronless/fdb/test_l2_pop.py b/test/functional/neutronless/fdb/test_l2_pop.py
index f2f6032..85ac514 100644
--- a/test/functional/neutronless/fdb/test_l2_pop.py
+++ b/test/functional/neutronless/fdb/test_l2_pop.py
@@ -91,6 +91,7 @@ def create_fdb_entry(seg_id):
         }
     }
 
+@pytest.mark.skip(reason=str("seems not done yet"))
 def test_add_remove_fdbs(bigip, icontrol_driver):
     """ Test simulating L2 pop events to add/remove fdb entries."""
 
diff --git a/test/functional/neutronless/loadbalancer/test_f5_common_networks.py b/test/functional/neutronless/loadbalancer/test_f5_common_networks.py
index 4b0afa4..903637c 100644
--- a/test/functional/neutronless/loadbalancer/test_f5_common_networks.py
+++ b/test/functional/neutronless/loadbalancer/test_f5_common_networks.py
@@ -87,6 +87,7 @@ def icontrol_driver(icd_config, fake_plugin_rpc):
     return icd
 
 
+@pytest.mark.skip(reason=str("seems not done yet"))
 def test_tenant(track_bigip_cfg, bigip, services, icd_config,
                  icontrol_driver):
     """Test creating and deleting SNAT pools with common network listener.
diff --git a/test/functional/neutronless/loadbalancer/test_loadbalancer_rd.py b/test/functional/neutronless/loadbalancer/test_loadbalancer_rd.py
index a749354..e6c4ce9 100644
--- a/test/functional/neutronless/loadbalancer/test_loadbalancer_rd.py
+++ b/test/functional/neutronless/loadbalancer/test_loadbalancer_rd.py
@@ -52,6 +52,8 @@ def icd_config():
     config['icontrol_hostname'] = pytest.symbols.bigip_floating_ips[0]
     config['icontrol_username'] = pytest.symbols.bigip_username
     config['icontrol_password'] = pytest.symbols.bigip_password
+    config['report_esd_names_in_agent'] = false
+    config['unlegacy_setting_placeholder'] = None
     #config['f5_vtep_selfip_name'] = pytest.symbols.f5_vtep_selfip_name
 
     return config
diff --git a/test/functional/neutronless/vcmp/common_service_handler_env.json b/test/functional/neutronless/vcmp/common_service_handler_env.json
index f62588d..8aa13b1 100644
--- a/test/functional/neutronless/vcmp/common_service_handler_env.json
+++ b/test/functional/neutronless/vcmp/common_service_handler_env.json
@@ -9,6 +9,8 @@
   "icontrol_vcmp_host2":                          {"host_ip": "10.190.5.186", "guest_name": "test_guest2", "guest_hostname": "local.localdomain"},
   "icontrol_username":                            "admin",
   "icontrol_password":                            "admin",
+  "report_esd_names_in_agent":                    false,
+  "unlegacy_setting_placeholder":                 null,
   "f5_device_type":                               "external",
   "f5_ha_type":                                   "standalone",
   "f5_global_routed_mode":                        true,
diff --git a/test/functional/neutronless/vcmp/test_vcmp.py b/test/functional/neutronless/vcmp/test_vcmp.py
index f4141fd..78b6a3d 100644
--- a/test/functional/neutronless/vcmp/test_vcmp.py
+++ b/test/functional/neutronless/vcmp/test_vcmp.py
@@ -169,7 +169,7 @@ def check_host_and_guest_vlans_on_create(vcmp_host, bigip):
     assert vcmp_host['bigip'].tm.net.vlans.vlan.exists(
         name='vlan-46', partition='Common')
 
-
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_createlb(track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup,
                        vcmp_uris):
     '''Create lb with vcmp turned on.'''
@@ -200,6 +200,7 @@ def test_vcmp_createlb(track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup,
     check_host_and_guest_vlans_on_create(vcmp_host[0], bigip)
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_deletelb(track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup,
                        vcmp_uris):
     '''Create and delete lb with vcmp turned on.'''
@@ -234,6 +235,7 @@ def test_vcmp_deletelb(track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup,
     assert not hasattr(vcmp_host[0]['guest'], 'vlans')
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_deletelb_with_mgmt_vlan(
         track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup, vcmp_uris,
         mgmt_vlan):
@@ -275,6 +277,7 @@ def test_vcmp_deletelb_with_mgmt_vlan(
     assert vcmp_host[0]['guest'].vlans == ['/Common/mgmt_vlan']
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_create_listener(
         track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup, vcmp_uris):
     '''Create listener with vcmp turned on.'''
@@ -306,6 +309,7 @@ def test_vcmp_create_listener(
     check_host_and_guest_vlans_on_create(vcmp_host[0], bigip)
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_delete_listener(
         track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup, vcmp_uris):
     '''Create and delete listener with vcmp turned on.'''
@@ -346,6 +350,7 @@ def test_vcmp_delete_listener(
     assert not hasattr(vcmp_host[0]['guest'], 'vlans')
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 @mock.patch('f5_openstack_agent.lbaasv2.drivers.bigip.icontrol_driver.'
             'ClusterManager')
 @mock.patch('f5_openstack_agent.lbaasv2.drivers.bigip.vcmp.LOG')
@@ -452,6 +457,7 @@ def test_vcmp_clustered_guests(
             name='vlan-46', partition='Common') is False
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 @mock.patch('f5_openstack_agent.lbaasv2.drivers.bigip.icontrol_driver.'
             'ClusterManager')
 @mock.patch('f5_openstack_agent.lbaasv2.drivers.bigip.vcmp.LOG')
@@ -482,6 +488,7 @@ def test_vcmp_clustered_guests_more_hosts_than_guests(
             pytest.symbols.bigip_ip) in ex.value.message
 
 
+@pytest.mark.skip(reason=str("vcmp seems not needed or supported yet"))
 def test_vcmp_delete_listener_flat(
         track_bigip_cfg, setup_bigip_devices, bigip, vcmp_setup, vcmp_uris):
     '''Create listener with vcmp turned on and flat as network type.'''
diff --git a/test/functional/neutronless/vcmp/vcmp_oslo_confs.json b/test/functional/neutronless/vcmp/vcmp_oslo_confs.json
index bc64baf..a92e125 100644
--- a/test/functional/neutronless/vcmp/vcmp_oslo_confs.json
+++ b/test/functional/neutronless/vcmp/vcmp_oslo_confs.json
@@ -89,6 +89,8 @@
         "icontrol_vcmp_hostname": "10.190.5.185",
         "icontrol_password": "admin", 
         "icontrol_username": "admin", 
+	"report_esd_names_in_agent": false,
+	"unlegacy_setting_placeholder": null,
         "instance_format": "[instance: %(uuid)s] ", 
         "instance_uuid_format": "[instance: %(uuid)s] ", 
         "interface_port_static_mappings": null, 
diff --git a/test/functional/singlebigip/test_network.py b/test/functional/singlebigip/test_network.py
index ba4fe0e..02f6653 100644
--- a/test/functional/singlebigip/test_network.py
+++ b/test/functional/singlebigip/test_network.py
@@ -221,9 +221,9 @@ class TestRouteDomain(object):
         te = setup
         num_route_domains = 5
         exp_rd_ids = []
-        for i in range(0, num_route_domains):
+        for i in range(50, 50+num_route_domains):
             rd = network_helper.create_route_domain(te.mgmt_root,
-                                                    te.rd_id,
+                                                    i,
                                                     te.partition,
                                                     is_aux=True)
             add_resource_teardown(te.request, rd)
@@ -239,9 +239,9 @@ class TestRouteDomain(object):
         te = setup
         num_route_domains = 5
         exp_rd_names = []
-        for i in range(0, num_route_domains):
+        for i in range(60, 60+num_route_domains):
             rd = network_helper.create_route_domain(te.mgmt_root,
-                                                    te.rd_id,
+                                                    i,
                                                     te.partition,
                                                     is_aux=True)
             add_resource_teardown(te.request, rd)
